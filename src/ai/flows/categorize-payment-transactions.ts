// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Categorizes payment transactions into categories like principal, interest, and fees.
 *
 * - categorizePaymentTransaction - A function that categorizes a payment transaction.
 * - CategorizePaymentTransactionInput - The input type for the categorizePaymentTransaction function.
 * - CategorizePaymentTransactionOutput - The return type for the categorizePaymentTransaction function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CategorizePaymentTransactionInputSchema = z.object({
  transactionDescription: z
    .string()
    .describe('The description of the payment transaction.'),
  paymentAmount: z.number().describe('The amount of the payment transaction.'),
});
export type CategorizePaymentTransactionInput = z.infer<
  typeof CategorizePaymentTransactionInputSchema
>;

const CategorizePaymentTransactionOutputSchema = z.object({
  category: z
    .enum(['principal', 'interest', 'fees', 'other'])
    .describe('The category of the payment transaction.'),
  explanation: z
    .string()
    .describe('Explanation of why the transaction was categorized this way.'),
});
export type CategorizePaymentTransactionOutput = z.infer<
  typeof CategorizePaymentTransactionOutputSchema
>;

export async function categorizePaymentTransaction(
  input: CategorizePaymentTransactionInput
): Promise<CategorizePaymentTransactionOutput> {
  return categorizePaymentTransactionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'categorizePaymentTransactionPrompt',
  input: {schema: CategorizePaymentTransactionInputSchema},
  output: {schema: CategorizePaymentTransactionOutputSchema},
  prompt: `You are an expert financial analyst specializing in loan payments.

You will receive a description of a payment transaction and the payment amount. You will categorize the transaction into one of the following categories: principal, interest, fees, or other. You will also provide an explanation of why you categorized the transaction this way.

Description: {{{transactionDescription}}}
Amount: {{{paymentAmount}}}

Category:`,
});

const categorizePaymentTransactionFlow = ai.defineFlow(
  {
    name: 'categorizePaymentTransactionFlow',
    inputSchema: CategorizePaymentTransactionInputSchema,
    outputSchema: CategorizePaymentTransactionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
